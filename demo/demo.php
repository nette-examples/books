<?php

declare(strict_types=1);

require __DIR__ . '/../vendor/autoload.php';

// The configurator is responsible for setting up the application environment and services.
// Learn more at https://doc.nette.org/en/bootstrap
$configurator = new Nette\Bootstrap\Configurator;

// Nette is smart, and the development mode usually turns on automatically,
// or you can enable it by uncommenting the following line for a specific IP address:
// $configurator->setDebugMode('secret@23.75.345.200');

// Enables Tracy: the ultimate "swiss army knife" debugging tool.
// Learn more about Tracy at https://tracy.nette.org
$configurator->enableTracy(__DIR__ . '/log');

// Set the directory for temporary system files generated by Nette (e.g., cache)
$configurator->setTempDirectory(__DIR__ . '/temp');

// Configuration settings based on the database type being used
$configurator->addConfig(__DIR__ . '/config/sqlite.neon'); // for SQLite
//$configurator->addConfig(__DIR__ . '/config/mysql.neon'); // Uncomment for MySQL
//$configurator->addConfig(__DIR__ . '/config/postgresql.neon'); // Uncomment for PostgreSQL
//$configurator->addConfig(__DIR__ . '/config/sqlsrv.neon'); // Uncomment for MS SQL Server

// Instantiate the DI container
$container = $configurator->createContainer();

// Fetch the database explorer from the DI container
// More about DI configuration: https://doc.nette.org/en/di-configuration
/** @var Nette\Database\Explorer $database */
$database = $container->getByType(Nette\Database\Explorer::class);

// Load the database dump from the file specified in the configuration
Nette\Database\Helpers::loadFromFile(
	$database->getConnection(),
	$container->parameters['dumpFile']
);

// Fetch and display book details along with their authors and tags
// More about Database Explorer: https://doc.nette.org/en/database-explorer
$books = $database->table('book');

// Handle output formatting based on the environment (CLI vs Web)
echo PHP_SAPI === 'cli' ? '' : '<xmp>';

foreach ($books as $book) {
	echo "title:      {$book->title} \n";
	echo "written by: {$book->author->name} \n"; // Author details fetched via a related table

	echo 'tags: ';
	// Fetch related tags for each book and display them
	foreach ($book->related('book_tag') as $bookTag) {
		echo $bookTag->tag->name . ', ';
	}
	echo "\n\n";
}

// Close the output formatting tag if not in CLI
echo PHP_SAPI === 'cli' ? '' : '</xmp>';
